{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-hierarchy/src/pack/siblings.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n",
      "start": 1707671529621,
      "end": 1707671529639,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707671529639,
      "end": 1707671529639,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707671529639,
      "end": 1707671529640,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707671529640,
      "end": 1707671529640,
      "order": "normal"
    }
  ]
}
