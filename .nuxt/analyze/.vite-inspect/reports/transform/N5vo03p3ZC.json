{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-geo/src/centroid.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n",
      "start": 1707671529579,
      "end": 1707671529600,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707671529601,
      "end": 1707671529601,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707671529601,
      "end": 1707671529602,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707671529602,
      "end": 1707671529602,
      "order": "normal"
    }
  ]
}
