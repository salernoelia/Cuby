{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/robust-predicates/esm/util.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n",
      "start": 1707671529914,
      "end": 1707671529933,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707671529933,
      "end": 1707671529933,
      "order": "normal"
    }
  ]
}
