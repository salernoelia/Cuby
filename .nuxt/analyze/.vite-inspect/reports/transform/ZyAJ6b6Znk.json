{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/robust-predicates/esm/orient2d.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n",
      "start": 1707611014525,
      "end": 1707611014528,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707611014528,
      "end": 1707611014528,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707611014528,
      "end": 1707611014529,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707611014529,
      "end": 1707611014529,
      "order": "normal"
    }
  ]
}
