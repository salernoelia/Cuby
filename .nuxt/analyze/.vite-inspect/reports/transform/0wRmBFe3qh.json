{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-geo/src/path/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n",
      "start": 1707611014248,
      "end": 1707611014267,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707611014267,
      "end": 1707611014267,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707611014268,
      "end": 1707611014268,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707611014268,
      "end": 1707611014268,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707611014268,
      "end": 1707611014268,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707611014268,
      "end": 1707611014268,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707611014268,
      "end": 1707611014268,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707611014268,
      "end": 1707611014268,
      "order": "normal"
    }
  ]
}
