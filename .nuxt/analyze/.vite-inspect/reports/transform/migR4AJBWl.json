{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-axis/src/axis.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n",
      "start": 1707611014106,
      "end": 1707611014129,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707611014129,
      "end": 1707611014129,
      "order": "normal"
    }
  ]
}
