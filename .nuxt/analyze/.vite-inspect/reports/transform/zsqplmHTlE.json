{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-geo/src/contains.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n",
      "start": 1707611463074,
      "end": 1707611463099,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707611463099,
      "end": 1707611463099,
      "order": "normal"
    }
  ]
}
