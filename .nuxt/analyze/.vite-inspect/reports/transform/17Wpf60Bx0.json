{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-scale/src/diverging.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n",
      "start": 1707671529683,
      "end": 1707671529702,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707671529702,
      "end": 1707671529702,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707671529702,
      "end": 1707671529703,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707671529703,
      "end": 1707671529703,
      "order": "normal"
    }
  ]
}
