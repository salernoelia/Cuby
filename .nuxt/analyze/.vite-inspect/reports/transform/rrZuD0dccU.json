{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-geo/src/stream.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n",
      "start": 1707674269244,
      "end": 1707674269263,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707674269263,
      "end": 1707674269263,
      "order": "normal"
    }
  ]
}
