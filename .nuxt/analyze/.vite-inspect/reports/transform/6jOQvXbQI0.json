{
  "resolvedId": "/Users/eliasalerno/GitHub/Cuby/node_modules/d3-geo/src/projection/albersUsa.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n",
      "start": 1707674269222,
      "end": 1707674269249,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707674269249,
      "end": 1707674269249,
      "order": "normal"
    }
  ]
}
